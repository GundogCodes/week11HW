1.What is Express in Node.js and why is it used?
    Node is an open source server enviroment package that allows you to excecute JS 
    outside the browser.Express is backend web framework package that allows you to 
    control the node.js server enviroment with functions and methods to set/control
    a server in congruence with other node packages. You can define routes of the 
    server, process HTTP requests, create views for webpages.

2.How does Mongoose help in using MongoDB with Node.js?
    Mongoose is an Node package that allows you to control/create a database with 
    MongoDB, where you can send and retrive info/data from using its own methods
    and abilites. 
3.Can you explain the role of Mongoose in managing relationships between data?
    Mongoose is a library probably of a class with its own methods that when you 
    import into your project can allow you to run those methods (functions) on your 
    code/data. Mongoose allows you to connect to MongoDB and it's servers and create
    databases which you can read or write info/data.

4.What is a software design pattern? Give an example.
    Software Design Pattern is the process by which you organize and create a software
    application. An example is the Models Views and Controllers design patter we have
    been using in our projects. 

5.Can you explain the MVC architecture in detail?
    This design pattern seperates each of the functionalites
    into different folders. The Models folder contains the schema for the data that we 
    will use throughout the code. The Views folder holds the templates for the visuals
    that the clients can see on their device, and the Controllers define how the clients'
    HTTP requests are handled and how the views and models may or may not be impacted.

6.What roles do Model, View, and Controller play in the MVC architecture?
    The Models folder contains the schema for the data that we will use throughout the 
    code.The Views folder holds the templates for the visuals that the clients can see on 
    their device, and the Controllers define how the clients' HTTP requests are handled 
    and how the views and models may or may not be impacted.

7.Define Latency and Throughput in the context of APIs.
    Latency refers to the response time between when a query is entered and when the res
    -ponse was delivered to the client. Throughput refers to the rate at which the requests
    to the API is processed.

8.Why is it important to minimize latency and maximize throughput in APIs?
    To have our API be useful in a timely and efficient manner such that it will actually be
    valuable to the user. 

9.What is Authentication in terms of web development?
    Authentication in terms of web development lets us decern and verify that the user that the 
    requesting from our API is allowed to do so. We use the JWT package along with the schema of 
    our data to be able to create a web token that allows us to verify that the user. 

10.How does the authorization process start?
    The Authentication process, on the backend, starts in the models section of the project. Where
    we use bcrypt and json web token to encrypt and verify user data. When a user is created, their 
    info their password is hashed and a token is created and everytime the user logins in their entered
    hashed password is compared with the one in the the database and verified and the token is verified 
    when the user wants to delete the account. 

11.What is express.static used for in Express?
    express.static is used to deliver static (non-dynamic ie. unchanging files) to the client. You can 
    create a public directory that hold folders containing static files and with the app.use(express.st
    -atic('/pathwayToStaticFile'))

12.Can you give an example of serving static files using express.static?
    Something like a word document or a css file would be an example.

13.What is Jest and why is it used?
    Jest is a package in node that you can use to be able to test your code to make sure it works properly
    in the way you want it to. You must add a app.test.js file in your project and use the functions and methods
    that the package comes with to perform tests on your code. Functions such as describe to describe what you will
    be testing in this code block, test where you will actually run the test, and methods such as expect and toBe to
    verify your desired output.

14.How can Supertest be helpful when working with Jest?
    Supertest allows you to make HTTP requests and test the functionality of your API.

15.Can you describe how manual and automated tests are executed?
    Manual tests are you going out of your way and running each part of the code to make sure its running the way you
    want. Automated tests such as tests with jest, supertest, and artillery allows you to automate and expedite this 
    process by using methods and abilities within those packages to acheive this goal.

16.What is the difference between unit testing, integration testing, and end-to-end testing?
    Unit testing is taking a single block of code, like a function, and testing it to make sure it works the way we
    want. Integration testing is testing the different blocks of code together and making sure they run properly with
    each other. End-to-end testing is testing the whole program to make sure it has the least amounts of bugs possible.

17.Can you provide examples of functional, regression, smoke, and performance tests?
    Functional tests are verifying that the software is functioning as intended, examples include manual testing to veriify
    the usability of the software. Regression testing is verifying that additional or new pieces of code do not break or add 
    bugs to our program, example would be integration testing. Smoke tests aim to idenify the basic functionalities of the program
    and making sure there is no bugs there example would be unit tests. Performance testing would test how well the program can run
    based off different loads, artillery is an example of this. 

18.What is meant by positive testing and negative testing in a functional testing context?
    Positive testing is testing for the outcomes of your code when they work the way you want. Negative testing is handling
    accounting for when errors pop up in the code and testing if the error is handled correctly.

19.How does load testing assess the behavior of software?
    Load testing tests the performance of software with respect to the volume of requests or operations being handled or made
    in the software and if it is able to or not.

20.What aspects does usability testing assess in a software application?
    Learnability, how easy is it for users to understand and use the app. Efficiency, how quickly and usefully can the app complete
    its tasks. Navigation, can users navigate and use the app easily. 

21.Why is security testing crucial in a software development life cycle?
    To ensure that the privacy and important data of both the user and devloper or organization is not compromised.

22.Can you explain what compatibility testing is?
    Compatibility testing has the goal of making sure that your app is compatible with many different environments and functions as
    we would like it too. These different environments include different browsers, different operating systems, different hardwares
    and etc. 
23.What is the aim of recovery testing and why is it important?
    Recovery testing aims to assess how well an app recovers from errors or failures. It involves intentionally causing failures or 
    abnormal conditions to test the program and how well it can recover. It is important as a failure is always inevitable, thus, it
    is important to put in failsafes and conditions that are able to recover the app to normal.

24.What is User Acceptance Testing (UAT) and who typically performs it?
    UAT is is where end-users (customers or business) test the software to ensure it meets their requirements and is ready for deployment.

25.Can you describe a scenario in which you would use each of the different testing types mentioned in the notes?
    To make sure all my functions are working as intended and returning the things they are supposed to I would use Jest to verify this. To
    verify that the proper HTTP requests with the wanted req,res are happening I would use Supertest to verify this. To Test that my application
    can handle the amount of traffic I should anticipate, doing Artillery load testing is paramount.